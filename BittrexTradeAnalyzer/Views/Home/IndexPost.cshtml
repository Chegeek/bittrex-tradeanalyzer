@model BittrexTradeAnalyzer.Models.TradeInput

@{
  ViewBag.Title = "TadeAnalyzer";
}

<h2>Analyze this!</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
      @Html.LabelFor(model => model.ApiKey, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ApiKey, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ApiKey, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ApiSecret, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ApiSecret, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ApiSecret, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Coin, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Coin, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Coin, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.NoOfTrades, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.NoOfTrades, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.NoOfTrades, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      <div class="col-md-offset-2 col-md-10">
        <input type="submit" value="Analyze!" class="btn btn-default" />
      </div>
    </div>
  </div>
}

<div>
  @Html.Raw(ViewBag.Result)
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}
